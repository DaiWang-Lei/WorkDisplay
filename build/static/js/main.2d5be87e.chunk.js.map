{"version":3,"sources":["component/ShoppingCart.module.css","App.module.css","appState.tsx","component/AddToCart.tsx","component/Robot.tsx","component/ShoppingCart.tsx","component/RobotDisCount.tsx","App.tsx","reportWebVitals.ts","index.tsx","component/Robot.module.css"],"names":["module","exports","defaultContextValue","authorName","shoppingCart","items","appContext","React","createContext","appSetStateContext","undefined","AppStateProvider","children","useState","state","setState","Provider","value","withAddToCart","ChildComponent","props","useContext","addToCart","id","name","email","className","styles","cardContainer","src","alt","onClick","ShoppingCart","handleClick","e","target","nodeName","isOpen","this","Consumer","cartContainer","button","length","cartDropDown","style","display","map","item","Component","RobotDiscount","useAddToCart","App","robotData","count","a","Axios","url","data","app","appHeader","robotList","RobotDisCount","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2d5be87e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"cartContainer\":\"ShoppingCart_cartContainer__3bDs9\",\"cartDropDown\":\"ShoppingCart_cartDropDown__2ti9Y\",\"button\":\"ShoppingCart_button__uoQw2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__Yd-rh\",\"appHeader\":\"App_appHeader__2AoPY\",\"appLogo\":\"App_appLogo__3MU8G\",\"App-logo-spin\":\"App_App-logo-spin__3eFnL\",\"robotList\":\"App_robotList__6Pr6P\"};","import React, { useState } from \"react\";\r\n\r\n\r\ninterface AppStateValue {\r\n  authorName: string;\r\n  shoppingCart: { items: { id: number, name: string }[] }\r\n}\r\nconst defaultContextValue: AppStateValue = {\r\n  authorName: \"Robuta\",\r\n  shoppingCart: { items: [] }\r\n};\r\n\r\n\r\nexport const appContext = React.createContext(defaultContextValue);\r\nexport const appSetStateContext = React.createContext<React.Dispatch<React.SetStateAction<AppStateValue>> | undefined>(undefined);\r\n\r\nexport const AppStateProvider: React.FC = ({ children }) => {\r\n  const [state, setState] = useState(defaultContextValue)\r\n  return (\r\n    <appContext.Provider value={state}>\r\n      <appSetStateContext.Provider value={setState}>\r\n        {children}\r\n      </appSetStateContext.Provider>\r\n    </appContext.Provider>\r\n  )\r\n}\r\nexport default AppStateProvider;","import React, { useContext } from 'react';\r\nimport { appSetStateContext } from '../appState'\r\nimport { RobotProps } from './Robot'\r\n\r\nexport const withAddToCart = (ChildComponent: React.ComponentType<RobotProps>) => {\r\n  return (props) => {\r\n    const setState = useContext(appSetStateContext)\r\n    const addToCart = (id, name) => {\r\n      if (setState) {\r\n        setState(state => {\r\n          return {\r\n            ...state,\r\n            shoppingCart: {\r\n              items: [...state.shoppingCart.items, {\r\n                id,\r\n                name\r\n              }]\r\n            }\r\n          }\r\n        })\r\n      }\r\n\r\n    }\r\n    return <ChildComponent {...props} addToCart={addToCart} />\r\n  }\r\n}\r\n\r\nexport const useAddToCart = () => { \r\n  const setState = useContext(appSetStateContext)\r\n  const addToCart = (id, name) => {\r\n    if (setState) {\r\n      setState(state => {\r\n        return {\r\n          ...state,\r\n          shoppingCart: {\r\n            items: [...state.shoppingCart.items, {\r\n              id,\r\n              name\r\n            }]\r\n          }\r\n        }\r\n      })\r\n    }\r\n\r\n  }\r\n  return addToCart;\r\n}\r\nexport default withAddToCart;","import React, { FC, useContext } from 'react';\r\nimport styles from './Robot.module.css'\r\nimport { appContext, appSetStateContext } from '../appState'\r\nimport { withAddToCart } from './AddToCart'\r\nexport interface RobotProps {\r\n  id: number;\r\n  name: string;\r\n  email: string;\r\n  addToCart: (id: number, name: string) => void;\r\n}\r\n\r\nconst Robot: FC<RobotProps> = (props) => {\r\n  const { id, name, email, addToCart, ...restProps } = props;\r\n  // hook 的useContext方式\r\n  const value = useContext(appContext)\r\n  return (\r\n    <div className={styles.cardContainer}>\r\n      <img src={`https://robohash.org/${id}`} alt=\"\" />\r\n      <h2>\r\n        name:{name}\r\n      </h2>\r\n      <p>\r\n        email：{email}\r\n      </p>\r\n      <p>\r\n        author: {value.authorName}\r\n      </p>\r\n      <button onClick={() => addToCart(id, name)}>加入购物车</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default withAddToCart(Robot);","import React from 'react';\r\nimport styles from './ShoppingCart.module.css'\r\nimport { FiShoppingCart } from 'react-icons/fi'\r\nimport { appContext } from '../appState'\r\ninterface Props {\r\n\r\n}\r\n\r\ninterface State {\r\n  isOpen: boolean;\r\n}\r\n\r\nclass ShoppingCart extends React.Component<Props, State> {\r\n  constructor(props: Props) {\r\n    super(props)\r\n    this.state = {\r\n      isOpen: false\r\n    }\r\n  }\r\n\r\n  handleClick = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\r\n\r\n    if ((e.target as HTMLElement).nodeName === 'SPAN') {\r\n      this.setState({ isOpen: !this.state.isOpen })\r\n    }\r\n\r\n  }\r\n  render() {\r\n    const { isOpen } = this.state;\r\n    return (\r\n      <appContext.Consumer>\r\n        {(value) => {\r\n          return (\r\n            < div className={styles.cartContainer} >\r\n\r\n              <button className={styles.button} onClick={this.handleClick}>\r\n                <FiShoppingCart />\r\n                <span>  购物车 {value.shoppingCart.items.length} (件)</span>\r\n              </button>\r\n\r\n              <div className={styles.cartDropDown}\r\n                style={{ display: isOpen ? 'block' : 'none' }}\r\n              >\r\n                <ul>\r\n                  {value.shoppingCart.items.map(item => {\r\n                    return (<li>\r\n                      {item.name}\r\n                    </li>)\r\n                  })}\r\n                </ul>\r\n              </div>\r\n            </div >\r\n          )\r\n        }}\r\n      </appContext.Consumer>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ShoppingCart;","import React, { FC, useContext } from 'react';\r\nimport styles from './Robot.module.css'\r\nimport { appContext } from '../appState'\r\nimport { useAddToCart } from './AddToCart'\r\nexport interface RobotProps {\r\n  id: number;\r\n  name: string;\r\n  email: string;\r\n}\r\n\r\nconst RobotDiscount: FC<RobotProps> = (props) => {\r\n  const { id, name, email, ...restProps } = props;\r\n  const addToCart = useAddToCart()\r\n  // hook 的useContext方式\r\n  const value = useContext(appContext)\r\n  return (\r\n    <div className={styles.cardContainer}>\r\n      <h2>甩卖商品</h2>\r\n      <img src={`https://robohash.org/${id}`} alt=\"\" />\r\n      <h2>\r\n        name:{name}\r\n      </h2>\r\n      <p>\r\n        email：{email}\r\n      </p>\r\n      <p>\r\n        author: {value.authorName}\r\n      </p>\r\n      <button onClick={() => addToCart(id, name)}>加入购物车</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default RobotDiscount;","import React from 'react';\nimport Axios from 'axios';\nimport Robot from './component/Robot';\nimport ShoppingCart from './component/ShoppingCart';\nimport logo from './assets/icon/logo.svg';\n// import robotData from './mockData/robots.json';\nimport styles from './App.module.css';\nimport RobotDisCount from './component/RobotDisCount';\n\ninterface Props {\n\n}\n\ninterface State {\n  robotData: any[],\n  count: number;\n}\n\nclass App extends React.Component<Props, State> {\n  constructor(props) {\n    super(props)\n    this.state = {\n      robotData: [],\n      count: 0,\n    }\n  }\n  async componentDidMount() {\n    const { data } = await Axios({\n      url: 'https://jsonplaceholder.typicode.com/users'\n    })\n    this.setState({ robotData: data })\n  }\n  render() {\n    // @ts-ignore\n    const { robotData, count } = this.state;\n    return (\n      <div className={styles.app} >\n        <div className={styles.appHeader}>\n          <h1>Work display</h1>\n        </div>\n        < ShoppingCart />\n        <div className={styles.robotList}>\n          {\n            robotData.map(({ id, name, email }) => {\n              return id % 2 == 0 ?\n                <Robot id={id} name={name} email={email} key={id} />\n                :\n                <RobotDisCount id={id} name={name} email={email} key={id} />\n\n            }\n            )\n          }\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport AppStateProvider from './appState'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppStateProvider>\n      <App />\n    </AppStateProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardContainer\":\"Robot_cardContainer__pbRB2\"};"],"sourceRoot":""}